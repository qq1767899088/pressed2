plugins {
    id 'com.android.application'
id 'org.jetbrains.kotlin.android'
}

android {
splits {
    abi {
        enable true
        reset()
        include "armeabi-v7a",'arm64-v8a'
        universalApk false
    }
}
aaptOptions{
noCompress "tflite"
noCompress "lite"
}
    compileSdk 33

    defaultConfig {
        applicationId "com.example.myapplication_"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
cppFlags "-frtti -fexceptions"
abiFilters 'x86', 'x86_64', 'armeabi-v7a', 'arm64-v8a'
arguments "-DOpenCV_DIR=" + opencvsdk + "/sdk/native"
            }
        }
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    externalNativeBuild {
        cmake {
            path file('src/main/cpp/CMakeLists.txt')
            version '3.18.1'
        }
    }
    buildFeatures {
        viewBinding true
        compose true
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}
def core_version = "1.6.0"
final def markwon_version = '4.6.2'
dependencies {

    implementation project(path: ':2myOpencv')
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.activity:activity-compose:1.3.1'
    implementation "androidx.core:core:$core_version"
implementation 'com.github.mukeshsolanki:MarkdownView-Android:2.0.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
implementation "io.noties.markwon:core:$markwon_version"
implementation "io.noties.markwon:ext-latex:$markwon_version"
implementation "io.noties.markwon:inline-parser:$markwon_version"
implementation "io.noties.markwon:html:$markwon_version"
implementation 'com.github.jeziellago:compose-markdown:0.3.1'
//    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.core:core-ktx:1.7.15'
//implementation 'com.nostra13.universalimageloader:universal-image-loader:1.9.5'
implementation("io.coil-kt:coil:2.2.2")
implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.1.0'
implementation 'org.tensorflow:tensorflow-lite:+'
    implementation 'com.google.android.gms:play-services-tflite-java:16.0.1'
    // Optional: include Tensorflow Lite Support Library
    implementation 'com.google.android.gms:play-services-tflite-support:16.0.1'
implementation 'com.google.android.gms:play-services-tasks:18.0.2'
implementation 'org.tensorflow:tensorflow-lite-support:+'
implementation 'com.google.android.gms:play-services-base:18.1.0'
    // To use Standard variant:
    //implementation 'cz.adaptech.tesseract4android:tesseract4android:4.5.0'

    // To use OpenMP variant:
//    implementation 'cz.adaptech.tesseract4android:tesseract4android-openmp:4.5.0'
}

